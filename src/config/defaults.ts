import { ExtractionConfig, WebsiteSettings } from '../types';
import { DEFAULT_USER_AGENT } from './constants';

export const defaultExtractionConfig: ExtractionConfig = {
  title: true,
  metaDescription: true,
  canonicalUrl: true,
  metaKeywords: false,
  openGraph: {
    enabled: true,
    extractTitle: true,
    extractDescription: true,
    extractImage: true,
    extractUrl: false,
    extractType: false,
  },
  headers: {
    enabled: true,
    levels: [1, 2, 3],
    includeText: true,
    includeStructure: true,
    includeIds: false,
    includeClasses: false,
    maxLength: 200,
  },
  navigation: {
    enabled: false,
    mainNavSelector: 'nav, .navigation, .main-nav, #navigation',
    footerNavSelector: 'footer nav, .footer-nav, .footer-navigation',
    sidebarNavSelector: '.sidebar nav, .sidebar-nav, aside nav',
    extractText: true,
    extractUrls: true,
    maxDepth: 3,
    breadcrumbs: {
      enabled: true,
      preset: 'schema',
      selectors: [],
      separator: '>',
      removeHome: false,
      maxDepth: 10,
    },
  },
  content: {
    enabled: false,
    mainContentSelector: 'main, .content, .main-content, #content, article',
    excludeSelectors: ['nav', 'header', 'footer', '.sidebar', '.advertisement'],
    includeImages: false,
    includeLinks: false,
    maxLength: 5000,
    preserveFormatting: false,
  },
  ecommerce: {
    enabled: false,
    products: {
      enabled: false,
      containerSelector: '.product, .product-item, [data-product]',
      titleSelector: '.product-title, .product-name, h1, h2',
      priceSelector: '.price, .product-price, .current-price',
      descriptionSelector: '.product-description, .description',
      imageSelector: '.product-image img, .product-photo img',
      skuSelector: '.sku, .product-sku, [data-sku]',
      stockSelector: '.stock, .availability, [data-stock]',
      ratingSelector: '.rating, .stars, .review-rating',
      reviewCountSelector: '.review-count, .reviews-count',
      brandSelector: '.brand, .product-brand',
      categorySelector: '.category, .product-category',
      urlSelector: 'a[href]',
      availabilitySelector: '.availability, .in-stock, .out-of-stock',
      saleSelector: '.sale, .on-sale, .discount',
      originalPriceSelector: '.original-price, .was-price, .old-price',
      extractVariants: false,
      variantSelector: '.variant, .product-variant, .option',
      trackInventory: true,
      trackPriceChanges: true,
    },
    categories: {
      enabled: false,
      containerSelector: '.category, .category-item, [data-category]',
      nameSelector: '.category-name, .category-title, h1, h2',
      descriptionSelector: '.category-description, .description',
      imageSelector: '.category-image img, .category-photo img',
      urlSelector: 'a[href]',
      productCountSelector: '.product-count, .count',
      subcategorySelector: '.subcategory, .child-category',
      parentCategorySelector: '.parent-category, .breadcrumb',
      extractHierarchy: true,
      maxDepth: 5,
    },
  },
  customSelectors: [],
};

export const defaultSettings: WebsiteSettings = {
  discovery: {
    method: 'sitemap',
    sitemap: {
      urls: [],
      autoDetect: true,
      followSitemapIndex: true,
      validateUrls: true,
      timeout: 30,
      userAgent: DEFAULT_USER_AGENT,
      extractionScope: 'all',
      specificUrls: [],
    },
    crawling: {
      maxDepth: 3,
      maxPages: 10000,
      respectRobotsTxt: true,
      crawlDelay: 1000,
      followExternalLinks: false,
      includePatterns: [],
      excludePatterns: ['/admin/*', '/login', '/logout', '*.pdf', '*.jpg', '*.png', '*.gif'],
      userAgent: DEFAULT_USER_AGENT,
      timeout: 30,
      maxConcurrency: 5,
      followRedirects: true,
      extractionScope: 'all',
      extractionPatterns: [],
    },
  },
  extraction: {
    defaultConfig: defaultExtractionConfig,
    urlConfigs: [],
  },
};